---
// PresentationSection.astro
import { Image } from 'astro:assets';
import carouselImage1 from '../assets/images/banner-3.png';
import carouselImage2 from '../assets/images/banner-4.png';
import carouselImage3 from '../assets/images/carrusel-3.webp';
import carouselImage4 from '../assets/images/carrusel-4.webp';

const carouselItems = [
  {
    id: 1,
    title: "Landing Page Corporativa",
    description: "Diseño moderno y profesional para empresas",
    image: carouselImage1,
    alt: "Ejemplo de landing page corporativa"
  },
  {
    id: 2,
    title: "Plataforma E-commerce",
    description: "Soluciones web para tiendas online",
    image: carouselImage2,
    alt: "Ejemplo de plataforma e-commerce"
  },
  {
    id: 3,
    title: "Dashboard Analytics",
    description: "Interfaces de usuario para visualización de datos",
    image:carouselImage3,
    alt: "Ejemplo de dashboard analytics"
  },
  {
    id: 4,
    title: "App Web Responsiva",
    description: "Aplicaciones web optimizadas para todos los dispositivos",
    image: carouselImage4,
    alt: "Ejemplo de app web responsiva"
  }
];
---

<section class="bg-gradient-to-b from-primary-900 to-gray-100 text-white py-16 md:py-24">
  <div class="container mx-auto px-4">
    <!-- Texto principal centrado -->
    <div class="text-center mb-16">
      <h1 class="text-4xl md:text-6xl font-bold mb-4">
        Soluciones Digitales <span class="text-accent-300">Innovadoras</span>
      </h1>
      <p class="text-xl md:text-2xl max-w-3xl mx-auto text-gray-200">
        Expertos en desarrollo web, redes y manetenimiento de equipos para transformar tu visión en realidad digital.
      </p>
      <div class="mt-8">
        <a href="/contacto" class="bg-accent-500 hover:bg-accent-400 text-white px-8 py-3 rounded-lg text-lg font-medium transition duration-300 inline-block mr-4">
          Contáctanos
        </a>
        <a href="/servicios" class="border-2 border-white hover:border-accent-300 hover:text-accent-300 px-8 py-3 rounded-lg text-lg font-medium transition duration-300 inline-block">
          Conoce más
        </a>
      </div>
    </div>

    <!-- Carrusel de imágenes -->
    
    <div class="relative w-full">
      <!-- Carrusel -->
      <div class="overflow-hidden w-full">
        <div id="carousel" class="carousel-items flex transition-transform duration-500 ease-in-out">
          {carouselItems.map((item) => (
            <div class="carousel-slide w-full flex-shrink-0 px-4" id={`slide-${item.id}`}>
              <div class="bg-primary-800 rounded-xl overflow-hidden shadow-xl">
                <div class="relative h-64 md:h-96">
                  <Image 
                      src={item.image} 
                      alt={item.alt}
                      class="w-full h-full object-cover"
                  />
                  <div class="absolute inset-0 bg-gradient-to-t from-primary-900 to-transparent opacity-70"></div>
                  <div class="absolute bottom-0 left-0 p-6">
                    <h3 class="text-xl md:text-2xl font-bold">{item.title}</h3>
                    <p class="text-gray-200">{item.description}</p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      <!-- Controles del carrusel -->
      <button id="prevButton" class="absolute left-5 top-1/2 transform -translate-y-1/2 bg-primary-800 bg-opacity-70 hover:bg-primary-700 text-white p-2 rounded-full z-10">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </button>
      <button id="nextButton" class="absolute right-5 top-1/2 transform -translate-y-1/2 bg-primary-800 bg-opacity-70 hover:bg-primary-700 text-white p-2 rounded-full z-10">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>

      <!-- Indicadores de diapositivas -->
      <div class="carousel-indicators flex justify-center mt-6 space-x-2">
        {carouselItems.map((item, index) => (
          <button 
            class="indicator w-3 h-3 rounded-full bg-gray-400 hover:bg-accent-400 transition-colors" 
            data-slide={index}
            aria-label={`Ir a slide ${index + 1}`}
          ></button>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  // Script para controlar el carrusel
  document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.getElementById('carousel');
    const slides = document.querySelectorAll('.carousel-slide');
    const indicators = document.querySelectorAll('.indicator');
    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');
    
    const slideCount = slides.length;
    let currentSlide = 0;

    // Configuración inicial
    updateCarousel();
    updateIndicators();

    // Botón anterior
    prevButton?.addEventListener('click', () => {
      currentSlide = (currentSlide - 1 + slideCount) % slideCount;
      updateCarousel();
      updateIndicators();
    });

    // Botón siguiente
    nextButton?.addEventListener('click', () => {
      currentSlide = (currentSlide + 1) % slideCount;
      updateCarousel();
      updateIndicators();
    });

    // Controladores de indicadores
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        currentSlide = index;
        updateCarousel();
        updateIndicators();
      });
    });

    // Actualizar la posición del carrusel
    function updateCarousel() {
      if (carousel) {
        carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
      }
    }

    // Actualizar indicadores activos
    function updateIndicators() {
      indicators.forEach((indicator, index) => {
        if (index === currentSlide) {
          indicator.classList.add('bg-accent-500');
          indicator.classList.remove('bg-gray-400');
        } else {
          indicator.classList.add('bg-gray-400');
          indicator.classList.remove('bg-accent-500');
        }
      });
    }

    // Auto rotación (opcional)
    const autoRotate = setInterval(() => {
      currentSlide = (currentSlide + 1) % slideCount;
      updateCarousel();
      updateIndicators();
    }, 5000); // Cambiar cada 5 segundos

    // Detener rotación al interactuar
    document.querySelector('.carousel-container')?.addEventListener('mouseenter', () => {
      clearInterval(autoRotate);
    });
  });
</script>